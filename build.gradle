/* 
 * The Gradle task dependencies 
 */
buildscript {
	repositories {
		mavenLocal()
		maven { url 'https://dl.bintray.com/opencaesar/ecore-adapter' }
		maven { url 'https://dl.bintray.com/opencaesar/owl-tools' }
		maven { url 'https://dl.bintray.com/opencaesar/oml-tools' }
		maven { url 'https://dl.bintray.com/opencaesar/owl-adapter' }
		maven { url 'https://dl.bintray.com/opencaesar/oml' }
		jcenter()
	}
	dependencies {
		classpath 'io.opencaesar.ecore:ecore2oml-gradle:+'
		classpath 'io.opencaesar.owl:owl-reason-gradle:+'
		classpath 'io.opencaesar.owl:oml2owl-gradle:+'
		classpath 'io.opencaesar.oml:oml-bikeshed-gradle:+'
		classpath 'io.opencaesar.oml:oml-merge-gradle:+'
		classpath 'de.undercouch:gradle-download-task:4.1.1'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:+'
		// needed since gradle bintray brings an old version of xerces
		configurations.classpath.exclude group: 'xerces', module: 'xercesImpl'
	}
}

/*
 * Subprojects
 */
subprojects {
	/*
	 * The repositories to look up OML dependencies in
	 */
	repositories {
		mavenLocal()
		maven { url 'https://dl.bintray.com/opencaesar/ontologies' }
		jcenter()
	}
	
	/*
	 * Dependency versions
	 */
	ext { 
		vocabulariesVersion = '1.+' 
	}
	
	/*
	 * The configuration of OML dependencies
	 */
	configurations {
		oml
		archives
	}

	/*
	 * The dependencies
	 */
	dependencies {
		oml "io.opencaesar.ontologies:vocabularies:$vocabulariesVersion"
	}
}

task mergeAllArtifacts() {
	doLast {
		println subprojects.configurations.oml.files.flatten()
		println  subprojects.configurations.archives.artifacts.files.files.flatten()
		tasks.create('merge', io.opencaesar.oml.merge.OmlMergeTask) {
		    inputZipPaths = subprojects.configurations.oml.files.flatten()
			inputZipPaths += subprojects.configurations.archives.artifacts.files.files.flatten()
		    outputCatalogFolder = file('build/oml')
		}.run()
    }
}

/*
 * A task to generate Bikeshed specification for the OML catalog
 */
task omlToBikeshed(type: io.opencaesar.oml.bikeshed.Oml2BikeshedTask, dependsOn: mergeAllArtifacts) {
	// OML catalog
	inputCatalogPath = file('catalog.xml')
	// OWL folder
	outputFolderPath = file('build/bikeshed')
	// Publish URL
	publishUrl = 'https://opencaesar.github.io/omg-vocabularies/'
}

/*
 * A task to generate the Bikeshed documentations in HTML
 */
import org.gradle.internal.os.OperatingSystem
task generateDocs(dependsOn: omlToBikeshed) {
	doLast {
		if (OperatingSystem.current().isWindows()) {
			exec { commandLine 'build/bikeshed/publish.bat' }
		} else {
			exec { commandLine 'chmod', '+x', 'build/bikeshed/publish.sh' }
			exec { commandLine 'build/bikeshed/publish.sh' }
		}
	}
}

/*
 * A task to delete the build artifacts
 */
task clean(type: Delete) {
	delete 'build'
}

